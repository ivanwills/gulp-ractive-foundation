---
count: 10
default:
  env:
    MANPATH: /home/ivan/.nvm/versions/v4.2.6/share/man:/home/ivan/.nvm/versions/v4.2.6/share/man:/usr/local/man:/usr/local/share/man:/usr/share/man:/home/ivan/.rvm/man
    NVM_BIN: /home/ivan/.nvm/versions/v4.2.6/bin
    NVM_PATH: /home/ivan/.nvm/versions/v4.2.6/lib/node
    PATH: /home/ivan/.nvm/versions/v4.2.6/bin:./node_modules/.bin:$PATH
  restart: 0
  wait: 1
name: gulp-ractive-foundation
terminals:
  2:
    edit: base
  3:
    edit: utils
  4:
    edit: gulp
editor:
  helper: |
    sub {
      my ($self, $group) = @_;
      if ($group =~ /^(?:ux|gulp)-\w/) {
        my ($component, $type) = $group =~ /^((?:ux|gulp)-.+)(?:-(all|test|docs))?$/;
        my $dir = "src/components/$component";
        return !$type       ? ("$dir/$component.js", "$dir/$component.hbs", "$dir/$component*.scss")
          : $type eq 'all'  ? ($component, "$component-test", "$component-docs")
          : $type eq 'test' ? ("$dir/$component.feature", "$dir/$component.steps.js", "$dir/use-cases/*")
          : $type eq 'docs' ? ("$dir/README.md", "$dir/manifest.json")
          :                   die "Unknown type '$type'!\n";
      }
      return ();
    }
  helper_autocomplete: |
    sub {
      my ($self) = @_;
      my @dir = q{src/components/* src/plugins/*};
      return map {($_, "$_-all", "$_-test", "$_-docs")}
        map {m{/([^/]*)$}; $1}
        grep {-d $_}
        map { glob $_ }
        @dir;
    }
  files:
    base:
      - index.js
      - gulpfile.js
      - node_modules/ractive-foundation/gulpfile.js
      - ../beta/gulpfile.js
    utils:
      - gulp/utils.js
      - node_modules/ractive-foundation/tasks/rfCucumber.js
      - node_modules/ractive-foundation/tasks/seleniumServer.js
      #- node_modules/ractive-foundation/tasks/renderDocumentation.js
    gulp:
      - gulp/component.js
      - gulp/documentation.js
      - gulp/manifest.js
      - gulp/plugin.js
      - gulp/template.js

